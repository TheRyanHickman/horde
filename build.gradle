
buildscript {
    dependencies {
//        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
        classpath 'com.sandec.jpro:jpro-plugin-gradle:2019.2.1'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://sandec.bintray.com/repo"
        }
    }
}

plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}
group 'com.klemstinegroup'
version '0.1'
apply plugin: 'com.google.osdetector'
ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

//sourceCompatibility = 1.8


repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.simpleframework', name: 'simple-xml', version: '2.7.1'
    compile group: 'com.googlecode.soundlibs', name: 'tritonus-share', version: '0.3.7.4'
//    implementation 'org.openjfx:javafx:+'
//    implementation 'org.openjfx:javafx:+'
//    implementation 'org.openjfx:javafx:14-ea+6'
    // Add your dependencies here, for example:
    // compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.14'
    compile "org.openjfx:javafx-base:13:$platform"
    compile "org.openjfx:javafx-graphics:13:$platform"
    compile "org.openjfx:javafx-controls:13:$platform"
    compile "org.openjfx:javafx-fxml:13:$platform"
    compile "org.openjfx:javafx-media:13:$platform"
    compile "org.openjfx:javafx-web:13:$platform"
}

//
javafx {
    version = "13"
    modules = [ 'javafx.controls', 'javafx.fxml' ,'javafx.base', 'javafx.graphics','javafx.media','javafx.swing','javafx.web']
}

application {
//    mainClassName = 'eu.hansolo.fx.regulators.Main'
    mainClassName = 'com.klemstine.TheHorde'
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'data'
        }
    }
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--add-exports', 'java.desktop/com.sun.media.sound=ALL-UNNAMED',
                '--add-modules', 'javafx.fxml,javafx.controls'
        ]
    }
}


run {
    doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--add-exports', 'java.desktop/com.sun.media.sound=ALL-UNNAMED',
                '--add-modules', 'javafx.fxml,javafx.controls'
        ]
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.klemstine.Main'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        sourceSets.main.output
    }


}

shadowJar {
    baseName = 'horde'
    classifier = null
    version = null
}

//apply plugin: 'javafx-gradle-plugin'
//jfx {
//    // minimal requirement for jfxJar-task
//    mainClass = 'com.klemstine.TheHorde'
//
//    // minimal requirement for jfxNative-task
//    vendor = 'KlemstineGroup'
//}

/**
 ******************  jpro Configuration ******************
 */
apply plugin: 'com.sandec.jpro'


/**
 * App Main Class
 */
//mainClassName = 'com.jpro.hellojpro.HelloJPro'
mainClassName = 'com.klemstine.TheHorde'

/**
 * jpro settings
 */
jpro {
    // for debugging
    // JVMArgs << '-agentlib:jdwp=transport=dt_socket,server=n,address=5006,suspend=y'

    JVMArgs << '-Xmx1000m'

    //jpro server port
    port = 8080

}
